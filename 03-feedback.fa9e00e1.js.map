{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,kBAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAUH,SAASC,cAAc,4BACjCG,EAAmB,sBACnBC,EAASN,EAAKO,iBAAiB,UAErCP,EAAKQ,iBACH,SACA,EAAAV,EAAAW,WAAS,SAAAC,GACP,IAAMC,EAAe,CAAEC,MAAOT,EAAMU,MAAOC,QAASV,EAAQS,OAC5DE,aAAaC,QAAQX,EAAkBY,KAAKC,UAAUP,G,GACrD,MAGLX,EAAKQ,iBAAiB,UAAU,SAAAE,GAC9BA,EAAES,iBACFC,QAAQC,IAAI,CAAET,MAAOT,EAAMU,MAAOC,QAASV,EAAQS,QACnDb,EAAKsB,QACLP,aAAaQ,WAAWlB,GAGxB,IAAK,IAAImB,EAAI,EAAGA,EAAIlB,EAAOmB,OAAQD,IAAK,CACxC,IAAKlB,EAAOkB,GAAGX,MAAO,CACpBO,QAAQC,IAAI,iBAAkBf,EAAOkB,IACrC,IAAIE,EAAQzB,SAAS0B,cAAc,OACnCD,EAAME,UAAU,QAChBF,EAAMG,MAAMC,MAAQ,MACpBJ,EAAMK,UAAY,kBAClB/B,EAAKwB,GAAGQ,cAAcC,aAAaP,EAAOpB,EAAOkB,G,CAKnD,IAFA,IAAMU,EAASlC,EAAKO,iBAAiB,UAE5B4B,EAAI,EAAGA,EAAID,EAAOT,OAAQU,IACjCD,EAAOC,GAAGC,Q,KAKd,IASMC,EATO,SAAAC,GACX,IACE,IAAMC,EAAkBxB,aAAayB,QAAQF,GAC7C,OAA2B,OAApBC,OAA2BE,EAAYxB,KAAKyB,MAAMH,E,CACzD,MAAOb,GACPN,QAAQM,MAAM,oBAAqBA,EAAMZ,Q,EAIzB6B,CAAKtC,GACrBgC,IACFlC,EAAMU,MAAQwB,EAAYzB,MAC1BR,EAAQS,MAAQwB,EAAYvB,Q","sources":["src/js/03-feedback.js"],"sourcesContent":["import { throttle } from 'lodash';\n\nconst form = document.querySelector('.feedback-form');\nconst email = document.querySelector('input[name=\"email\"]');\nconst message = document.querySelector('textarea[name=\"message\"]');\nconst LOCALSTORAGE_KEY = 'feedback-form-state';\nconst fields = form.querySelectorAll('.field');\n\nform.addEventListener(\n  'input',\n  throttle(e => {\n    const objectToSave = { email: email.value, message: message.value };\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(objectToSave));\n  }, 500)\n); \n \nform.addEventListener('submit', e => {\n  e.preventDefault();\n  console.log({ email: email.value, message: message.value });\n  form.reset();\n  localStorage.removeItem(LOCALSTORAGE_KEY);\n  \n\n  for (let i = 0; i < fields.length; i++) {\n  if (!fields[i].value) {\n    console.log('field is blank', fields[i])\n    let error = document.createElement('div')\n    error.className='error'\n    error.style.color = 'red'\n    error.innerHTML = 'Cannot be blank'\n    form[i].parentElement.insertBefore(error, fields[i])\n  }\n    \n  const errors = form.querySelectorAll('.error')\n\n  for (let i = 0; i < errors.length; i++) {\n    errors[i].remove()\n  }\n}\n}); \n \nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst storageData = load(LOCALSTORAGE_KEY);\nif (storageData) {\n  email.value = storageData.email;\n  message.value = storageData.message;\n} \n\n"],"names":["$1WSnx","parcelRequire","$b00c40859be242c5$var$form","document","querySelector","$b00c40859be242c5$var$email","$b00c40859be242c5$var$message","$b00c40859be242c5$var$LOCALSTORAGE_KEY","$b00c40859be242c5$var$fields","querySelectorAll","addEventListener","throttle","e","objectToSave","email","value","message","localStorage","setItem","JSON","stringify","preventDefault","console","log","reset","removeItem","i","length","error","createElement","className","style","color","innerHTML","parentElement","insertBefore","errors","i1","remove","$b00c40859be242c5$var$storageData","key","serializedState","getItem","undefined","parse","$b00c40859be242c5$var$load"],"version":3,"file":"03-feedback.fa9e00e1.js.map"}